name: PROD

on:
  push:
    tags:
      - 'v*.*.*'   # triggers on tags like v1.0.0, v2.3.1, etc.

jobs:
  terraform-apply:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Export Azure Service Principal creds for Terraform
        run: |
          echo "ARM_CLIENT_ID=${{ fromJSON(secrets.AZURE_CREDENTIALS_PROD).clientId }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ fromJSON(secrets.AZURE_CREDENTIALS_PROD).clientSecret }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ fromJSON(secrets.AZURE_CREDENTIALS_PROD).subscriptionId }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ fromJSON(secrets.AZURE_CREDENTIALS_PROD).tenantId }}" >> $GITHUB_ENV

      - name: Create Prod VM
        working-directory: infra
        run: |
          echo "deploying production: TAG=${{ github.event.inputs.tag }}"
          TAG=${{ github.event.inputs.tag }}
          terraform init -backend-config="path=terraform/prod"
          terraform validate
          terraform plan -var-file="prod.tfvars"
          terraform apply -auto-approve -var-file="prod.tfvars"
          terraform output -raw public_ip > vm_ip.txt

      - name: Upload inventory.ini as artifact
        uses: actions/upload-artifact@v4
        with:
          name: inventory-file-prod
          path: infra/inventory_prod.ini

      - name: Upload VM IP
        uses: actions/upload-artifact@v4
        with:
          name: prod-vm-ip
          path: infra/vm_ip.txt

  ansible:
    needs: terraform-apply
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download inventory artifact
        uses: actions/download-artifact@v4
        with:
          name: inventory-file-prod
          path: ansible   # where to place the downloaded file

          
      - name: Download VM IP artifact
        uses: actions/download-artifact@v4
        with:
          name: prod-vm-ip
          path: ~/vm

      - name: Read VM IP
        id: vm
        run: |
          VM_IP=$(grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' ~/vm/vm_ip.txt | head -n 1)
          if [ -z "$VM_IP" ]; then
            echo "Error: Could not extract VM IP"
            exit 1
          fi
          echo "VM_IP=$VM_IP" >> $GITHUB_ENV
          echo "Using VM IP: $VM_IP"

      - name: Setup SSH
        env:
          CI_SSH_KEY: ${{ secrets.CI_SSH_KEY_PROD }}
        run: |
          mkdir -p ~/.ssh
          echo "$CI_SSH_KEY" > ~/.ssh/id_rsa_tcloud_prod
          chmod 600 ~/.ssh/id_rsa_tcloud_prod
          touch ~/.ssh/known_hosts
          ssh-keyscan -H ${{ env.VM_IP }} >> ~/.ssh/known_hosts

      - name: Run Ansible playbook
        working-directory: ansible
        run: ansible-playbook playbook.yml -i inventory_prod.ini
